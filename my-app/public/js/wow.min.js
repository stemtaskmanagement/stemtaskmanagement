/*!
 * WOW.js - v1.3.0
 * https://wowjs.uk/
 * Licensed under the MIT license - http://opensource.org/licenses/MIT
 * Copyright 2016 Matthieu Aussaguel
 */
(function () {
  "use strict";

  // Function to initialize WOW.js
  function WOW(options) {
    // Initialize options or use defaults
    this.config = options || {};
    // Initialize callbacks list
    this.callbacks = {
      wowInit: [],
      wowStarted: [],
      wowFinished: [],
      wowStopped: [],
    };

    // Initialize WOW.js
    if (typeof window !== "undefined" && window.addEventListener) {
      this.init();
    }
  }

  // Prototype methods for WOW.js
  WOW.prototype = {
    // Initialize WOW.js
    init: function () {
      // Add class 'wow' to elements with 'data-wow-*' attribute
      var elements = document.querySelectorAll(".wow");
      for (var i = 0; i < elements.length; i++) {
        var element = elements[i];
        this.applyStyle(element);
      }
      // Add event listener to trigger animations on scroll
      window.addEventListener("scroll", this.scrollHandler.bind(this));
    },

    // Apply animation styles to element
    applyStyle: function (element) {
      // Get data-wow-* attributes
      var animation = element.getAttribute("data-wow-animation") || "fadeIn";
      var duration = element.getAttribute("data-wow-duration") || "1s";
      var delay = element.getAttribute("data-wow-delay") || "0s";
      var iteration = element.getAttribute("data-wow-iteration") || "1";
      // Apply animation styles
      element.style.visibility = "hidden";
      element.style.animationDuration = duration;
      element.style.animationDelay = delay;
      element.style.animationIterationCount = iteration;
      element.classList.add("animated");
      element.classList.add(animation);
    },

    // Handle scroll event to trigger animations
    scrollHandler: function () {
      var self = this;
      var elements = document.querySelectorAll(".wow");
      for (var i = 0; i < elements.length; i++) {
        var element = elements[i];
        if (self.isVisible(element)) {
          self.triggerAnimation(element);
        }
      }
    },

    // Check if element is visible in viewport
    isVisible: function (element) {
      var rect = element.getBoundingClientRect();
      return (
        rect.top <=
          (window.innerHeight || document.documentElement.clientHeight) &&
        rect.bottom >= 0 &&
        rect.left <=
          (window.innerWidth || document.documentElement.clientWidth) &&
        rect.right >= 0
      );
    },

    // Trigger animation on element
    triggerAnimation: function (element) {
      element.style.visibility = "visible";
      element.classList.add("animated");
      this.callCallbacks("wowStarted", element);
      element.addEventListener(
        "animationend",
        this.animationEndHandler.bind(this, element)
      );
    },

    // Handle animationend event
    animationEndHandler: function (element) {
      element.classList.remove("animated");
      this.callCallbacks("wowFinished", element);
    },

    // Call registered callbacks
    callCallbacks: function (event, element) {
      var callbacks = this.callbacks[event];
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(this, element);
      }
    },
  };

  // Export WOW to window
  window.WOW = WOW;

  // Initialize WOW.js
  new WOW().init();
})();
